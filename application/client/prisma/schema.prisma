generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id          Int          @id @default(autoincrement())
  tag         String       @unique
  name        String?
  assignments Assignment[]
}

model Assignment {
  id           Int          @id @default(autoincrement())
  name         String
  dueDate      DateTime?
  courseId     Int?
  Course       Course?      @relation(fields: [courseId], references: [id], onDelete: Cascade)
  repositories Repository[]
}

model Group {
  id             Int          @id @default(autoincrement())
  githubLink     String
  blackboardLink String?
  repositories   Repository[]
}

model Repository {
  id                 Int                  @id @default(autoincrement())
  githubLink         String
  groupId            Int?
  assignmentId       Int?
  gitAnalysis        GitAnalysis[]
  lighthouseAnalysis LighthouseAnalysis[]
  Assignment         Assignment?          @relation(fields: [assignmentId], references: [id])
  Group              Group?               @relation(fields: [groupId], references: [id])
}

model GitAnalysis {
  id             Int         @id @default(autoincrement())
  repositoryId   Int?
  numberCommits  Int
  commitsPerUser Json
  commitsPerDay  Json
  Repository     Repository? @relation(fields: [repositoryId], references: [id])
}

model LighthouseAnalysis {
  id           Int         @id @default(autoincrement())
  fcp          String
  hasHttps     Boolean?
  hasViewport  Boolean
  repositoryId Int?
  Repository   Repository? @relation(fields: [repositoryId], references: [id])
}

model Analyzer {
  id                  Int                  @id @default(autoincrement())
  name                String
  Reports             Report[]
  AnalyzerDefinitions AnalyzerDefinition[]
}

model AnalyzerDefinition {
  id          Int        @id @default(autoincrement())
  keyName     String
  valueType   String
  analyzerId  Int?
  Analyzer    Analyzer?  @relation(fields: [analyzerId], references: [id])
  Component   Component? @relation(fields: [componentId], references: [id])
  componentId Int?
}

model Component {
  id                  Int                  @id @default(autoincrement())
  name                String
  parameters          Json?
  analyzerDefinitions AnalyzerDefinition[]
}

model Report {
  id         Int       @id @default(autoincrement())
  name       String
  repository Int?
  jsonblob   Json
  Analyzer   Analyzer? @relation(fields: [analyzerId], references: [id])
  analyzerId Int?
}
